{"ast":null,"code":"var _jsxFileName = \"/Users/vivian/Desktop/uncountable-frontend/uncountable-frontend/src/components/Chart.js\";\nimport React from 'react';\nimport dataset from '../assets/dataset.json';\nimport * as CanvasJSReact from '../assets/canvasjs.react';\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart; // import { CanvasJS, CanvasJSChart } from '../assets/canvasjs.react'\n// var CanvasJSReact = require('../assets/canvasjs.react');\n// var CanvasJS = CanvasJSReact.CanvasJS;\n// var CanvasJSChart = CanvasJSReact.CanvasJSChart;\n// import CanvasJS from 'canvasjs'\n\nclass Chart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataset: dataset,\n      output: \"Output\",\n      title: \"\",\n      axisX: {\n        title: \"Experiment\"\n      },\n      axisY: {\n        title: \"Amount of Inputs\"\n      },\n      data: [],\n      options: {}\n    };\n  }\n\n  updateOutput(output) {\n    this.setState({\n      output: output\n    });\n  }\n\n  updateTitle(output) {\n    console.log(\"updating title\");\n    let newTitle = output + \" Chart\";\n    this.setState({\n      title: newTitle\n    });\n  }\n\n  sortData(output) {// sort by descending based on the output for this \n  }\n\n  updateData(output) {\n    console.log(\"updating data\"); // this.setState({data: })\n  }\n\n  updateOptions(output) {\n    this.updateOutput(output);\n    this.updateTitle(output);\n    this.updateData(output);\n    this.setState({\n      options: {\n        title: this.state.title,\n        data: this.state.data\n      }\n    });\n  }\n\n  render() {\n    console.log(this.state.dataset);\n    return React.createElement(\"div\", {\n      className: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.updateOptions(\"Viscosity\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Viscosity\"), React.createElement(\"button\", {\n      onClick: () => this.updateOptions(\"Cure Time\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Cure Time\"), React.createElement(\"button\", {\n      onClick: () => this.updateOptions(\"Elongation\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Elongation\"), React.createElement(\"button\", {\n      onClick: () => this.updateOptions(\"Tensile Strength\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Tensile Strength\"), React.createElement(\"button\", {\n      onClick: () => this.updateOptions(\"Compression Set\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Compression Set\"), React.createElement(CanvasJSChart, {\n      options: this.state.options,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Chart;","map":{"version":3,"sources":["/Users/vivian/Desktop/uncountable-frontend/uncountable-frontend/src/components/Chart.js"],"names":["React","dataset","CanvasJSReact","CanvasJS","CanvasJSChart","Chart","Component","constructor","props","state","output","title","axisX","axisY","data","options","updateOutput","setState","updateTitle","console","log","newTitle","sortData","updateData","updateOptions","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAO,KAAKC,aAAZ,MAA+B,0BAA/B;AACA,IAAIC,QAAQ,GAAGD,aAAa,CAACC,QAA7B;AACA,IAAIC,aAAa,GAAGF,aAAa,CAACE,aAAlC,C,CACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,KAAN,SAAoBL,KAAK,CAACM,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXR,MAAAA,OAAO,EAAEA,OADE;AAEXS,MAAAA,MAAM,EAAE,QAFG;AAGXC,MAAAA,KAAK,EAAE,EAHI;AAIXC,MAAAA,KAAK,EAAE;AACLD,QAAAA,KAAK,EAAE;AADF,OAJI;AAOXE,MAAAA,KAAK,EAAE;AACLF,QAAAA,KAAK,EAAE;AADF,OAPI;AAUXG,MAAAA,IAAI,EAAE,EAVK;AAWXC,MAAAA,OAAO,EAAE;AAXE,KAAb;AAaD;;AAEDC,EAAAA,YAAY,CAACN,MAAD,EAAS;AACnB,SAAKO,QAAL,CAAc;AAAEP,MAAAA,MAAM,EAAEA;AAAV,KAAd;AACD;;AAEDQ,EAAAA,WAAW,CAACR,MAAD,EAAS;AAClBS,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,QAAIC,QAAQ,GAAGX,MAAM,GAAG,QAAxB;AACA,SAAKO,QAAL,CAAc;AAACN,MAAAA,KAAK,EAAEU;AAAR,KAAd;AACD;;AAEDC,EAAAA,QAAQ,CAACZ,MAAD,EAAS,CACf;AACD;;AAEDa,EAAAA,UAAU,CAACb,MAAD,EAAS;AACjBS,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EADiB,CAEjB;AACD;;AAEDI,EAAAA,aAAa,CAACd,MAAD,EAAS;AACpB,SAAKM,YAAL,CAAkBN,MAAlB;AACA,SAAKQ,WAAL,CAAiBR,MAAjB;AACA,SAAKa,UAAL,CAAgBb,MAAhB;AACA,SAAKO,QAAL,CAAc;AACZF,MAAAA,OAAO,EAAE;AACPJ,QAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,KADX;AAEPG,QAAAA,IAAI,EAAE,KAAKL,KAAL,CAAWK;AAFV;AADG,KAAd;AAMD;;AAEDW,EAAAA,MAAM,GAAG;AACPN,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWR,OAAvB;AACA,WACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKuB,aAAL,CAAmB,WAAnB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKA,aAAL,CAAmB,WAAnB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,EAGE;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKA,aAAL,CAAmB,YAAnB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,EAIE;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKA,aAAL,CAAmB,kBAAnB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJF,EAKE;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKA,aAAL,CAAmB,iBAAnB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBALF,EAME,oBAAC,aAAD;AAAe,MAAA,OAAO,EAAK,KAAKf,KAAL,CAAWM,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF;AAUD;;AA7DiC;;AAgEpC,eAAeV,KAAf","sourcesContent":["import React from 'react';\nimport dataset from '../assets/dataset.json';\nimport * as CanvasJSReact from '../assets/canvasjs.react';\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n// import { CanvasJS, CanvasJSChart } from '../assets/canvasjs.react'\n// var CanvasJSReact = require('../assets/canvasjs.react');\n// var CanvasJS = CanvasJSReact.CanvasJS;\n// var CanvasJSChart = CanvasJSReact.CanvasJSChart;\n// import CanvasJS from 'canvasjs'\n\nclass Chart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataset: dataset,\n      output: \"Output\",\n      title: \"\",\n      axisX: {\n        title: \"Experiment\"\n      },\n      axisY: {\n        title: \"Amount of Inputs\"\n      }, \n      data: [],\n      options: {}\n    };\n  }\n\n  updateOutput(output) {\n    this.setState({ output: output });\n  }\n\n  updateTitle(output) {\n    console.log(\"updating title\");\n    let newTitle = output + \" Chart\";\n    this.setState({title: newTitle});\n  }\n\n  sortData(output) {\n    // sort by descending based on the output for this \n  }\n\n  updateData(output) {\n    console.log(\"updating data\");\n    // this.setState({data: })\n  }\n\n  updateOptions(output) {\n    this.updateOutput(output);\n    this.updateTitle(output);\n    this.updateData(output);\n    this.setState({ \n      options: {\n        title: this.state.title,\n        data: this.state.data\n      } \n    })\n  }\n\n  render() {\n    console.log(this.state.dataset);\n    return (\n      <div className=\"chart\">\n        <button onClick={() => this.updateOptions(\"Viscosity\")}>Viscosity</button>\n        <button onClick={() => this.updateOptions(\"Cure Time\")}>Cure Time</button>\n        <button onClick={() => this.updateOptions(\"Elongation\")}>Elongation</button>\n        <button onClick={() => this.updateOptions(\"Tensile Strength\")}>Tensile Strength</button>\n        <button onClick={() => this.updateOptions(\"Compression Set\")}>Compression Set</button>\n        <CanvasJSChart options = { this.state.options } />\n      </div>\n    )\n  }\n}\n\nexport default Chart"]},"metadata":{},"sourceType":"module"}