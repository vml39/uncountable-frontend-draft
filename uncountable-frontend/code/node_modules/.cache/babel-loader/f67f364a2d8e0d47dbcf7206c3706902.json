{"ast":null,"code":"var _jsxFileName = \"/Users/vivian/Desktop/uncountable-frontend/uncountable-frontend/src/components/Chart.js\";\nimport React from 'react';\nimport dataset from '../assets/dataset.json';\nimport * as CanvasJSReact from '../assets/canvasjs.react.js'; // var CanvasJS = CanvasJSReact.CanvasJS;\n// var CanvasJSChart = CanvasJSReact.CanvasJSChart;\n// import { CanvasJS, CanvasJSChart } from '../assets/canvasjs.react'\n// var CanvasJSReact = require('../assets/canvasjs.react');\n// var CanvasJS = CanvasJSReact.CanvasJS;\n// var CanvasJSChart = CanvasJSReact.CanvasJSChart;\n// import CanvasJS from 'canvasjs'\n\nclass Chart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataset: dataset,\n      output: \"Output\",\n      title: \"\",\n      data: [],\n      options: {}\n    };\n  }\n\n  updateOutput(output) {\n    this.setState({\n      output: output\n    });\n  }\n\n  updateTitle(output) {\n    console.log(\"updating title\");\n    let newTitle = output + \" Chart\";\n    this.setState({\n      title: newTitle\n    });\n  }\n\n  updateData(output) {\n    console.log(\"updating data\"); // this.setState({data: })\n  }\n\n  updateOptions(output) {\n    this.updateOutput(output);\n    this.updateTitle(output);\n    this.updateData(output);\n    this.setState({\n      options: {\n        title: this.state.title,\n        data: this.state.data\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Output\"), React.createElement(\"div\", {\n      className: \"dropdown\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.updateOptions(\"Viscosity\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Viscosity\"), React.createElement(\"button\", {\n      onClick: () => this.updateOptions(\"Cure Time\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Cure Time\"), React.createElement(\"button\", {\n      onClick: () => this.updateOptions(\"Elongation\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Elongation\"), React.createElement(\"button\", {\n      onClick: () => this.updateOptions(\"Tensile Strength\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Tensile Strength\"), React.createElement(\"button\", {\n      onClick: () => this.updateOptions(\"Compression Set\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Compression Set\")), React.createElement(CanvasJSReact, {\n      options: this.state.options,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Chart;","map":{"version":3,"sources":["/Users/vivian/Desktop/uncountable-frontend/uncountable-frontend/src/components/Chart.js"],"names":["React","dataset","CanvasJSReact","Chart","Component","constructor","props","state","output","title","data","options","updateOutput","setState","updateTitle","console","log","newTitle","updateData","updateOptions","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAO,KAAKC,aAAZ,MAA+B,6BAA/B,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXN,MAAAA,OAAO,EAAEA,OADE;AAEXO,MAAAA,MAAM,EAAE,QAFG;AAGXC,MAAAA,KAAK,EAAE,EAHI;AAIXC,MAAAA,IAAI,EAAE,EAJK;AAKXC,MAAAA,OAAO,EAAE;AALE,KAAb;AAOD;;AAEDC,EAAAA,YAAY,CAACJ,MAAD,EAAS;AACnB,SAAKK,QAAL,CAAc;AAAEL,MAAAA,MAAM,EAAEA;AAAV,KAAd;AACD;;AAEDM,EAAAA,WAAW,CAACN,MAAD,EAAS;AAClBO,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,QAAIC,QAAQ,GAAGT,MAAM,GAAG,QAAxB;AACA,SAAKK,QAAL,CAAc;AAACJ,MAAAA,KAAK,EAAEQ;AAAR,KAAd;AACD;;AAEDC,EAAAA,UAAU,CAACV,MAAD,EAAS;AACjBO,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EADiB,CAEjB;AACD;;AAEDG,EAAAA,aAAa,CAACX,MAAD,EAAS;AACpB,SAAKI,YAAL,CAAkBJ,MAAlB;AACA,SAAKM,WAAL,CAAiBN,MAAjB;AACA,SAAKU,UAAL,CAAgBV,MAAhB;AACA,SAAKK,QAAL,CAAc;AACZF,MAAAA,OAAO,EAAE;AACPF,QAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,KADX;AAEPC,QAAAA,IAAI,EAAE,KAAKH,KAAL,CAAWG;AAFV;AADG,KAAd;AAMD;;AAEDU,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKD,aAAL,CAAmB,WAAnB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKA,aAAL,CAAmB,WAAnB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,EAGE;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKA,aAAL,CAAmB,YAAnB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,EAIE;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKA,aAAL,CAAmB,kBAAnB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJF,EAKE;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKA,aAAL,CAAmB,iBAAnB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBALF,CAFF,EASE,oBAAC,aAAD;AAAe,MAAA,OAAO,EAAK,KAAKZ,KAAL,CAAWI,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADF;AAeD;;AAvDiC;;AA0DpC,eAAeR,KAAf","sourcesContent":["import React from 'react';\nimport dataset from '../assets/dataset.json';\nimport * as CanvasJSReact from '../assets/canvasjs.react.js';\n// var CanvasJS = CanvasJSReact.CanvasJS;\n// var CanvasJSChart = CanvasJSReact.CanvasJSChart;\n// import { CanvasJS, CanvasJSChart } from '../assets/canvasjs.react'\n// var CanvasJSReact = require('../assets/canvasjs.react');\n// var CanvasJS = CanvasJSReact.CanvasJS;\n// var CanvasJSChart = CanvasJSReact.CanvasJSChart;\n// import CanvasJS from 'canvasjs'\n\nclass Chart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataset: dataset,\n      output: \"Output\",\n      title: \"\",\n      data: [],\n      options: {}\n    };\n  }\n\n  updateOutput(output) {\n    this.setState({ output: output });\n  }\n\n  updateTitle(output) {\n    console.log(\"updating title\");\n    let newTitle = output + \" Chart\";\n    this.setState({title: newTitle});\n  }\n\n  updateData(output) {\n    console.log(\"updating data\");\n    // this.setState({data: })\n  }\n\n  updateOptions(output) {\n    this.updateOutput(output);\n    this.updateTitle(output);\n    this.updateData(output);\n    this.setState({ \n      options: {\n        title: this.state.title,\n        data: this.state.data\n      } \n    })\n  }\n\n  render() {\n    return (\n      <div className=\"chart\">\n        <button>Output</button>\n        <div className=\"dropdown\">\n          <button onClick={() => this.updateOptions(\"Viscosity\")}>Viscosity</button>\n          <button onClick={() => this.updateOptions(\"Cure Time\")}>Cure Time</button>\n          <button onClick={() => this.updateOptions(\"Elongation\")}>Elongation</button>\n          <button onClick={() => this.updateOptions(\"Tensile Strength\")}>Tensile Strength</button>\n          <button onClick={() => this.updateOptions(\"Compression Set\")}>Compression Set</button>\n        </div>\n        <CanvasJSReact options = { this.state.options } />\n        {/* dropdown */}\n        {/* chart */}\n      </div>\n    )\n  }\n}\n\nexport default Chart"]},"metadata":{},"sourceType":"module"}